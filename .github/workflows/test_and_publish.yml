name: Test & Publish

on:
  push:
    branches: 
      - master
      - develop
    paths-ignore:
      - "docs/**"
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - "docs/**"
  workflow_dispatch:
  repository_dispatch:
    types: [ok-to-test-command]

permissions:
  id-token: write
  contents: read

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Run unit tests
      uses: ./.github/actions/unit_tests
      with:
        python_version: ${{ matrix.python-version }}

  sonarcloud_trusted_branch:
    runs-on: ubuntu-latest
    needs: unit_tests
    if: (github.event.pull_request.head.repo.full_name == github.repository || github.event.pull_request == null)
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    - name: Run SonarCloud scan
      uses: ./.github/actions/sonarcloud
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        sonarcloud_token: ${{ secrets.SONARCLOUD_TOKEN }}
        project_base_dir: ${{ github.workspace }}

  sonarcloud_forked_branch:
    runs-on: ubuntu-latest
    needs: unit_tests
    if: (github.event.pull_request.head.repo.full_name != github.repository && github.event.repository_dispatch.client_payload.pull_request.head.repo.full_name != github.repository)
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.client_payload.pull_request.head.sha || github.event.pull_request.head.sha }}

    - name: Run SonarCloud scan
      uses: ./.github/actions/sonarcloud
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        sonarcloud_token: ${{ secrets.SONARCLOUD_TOKEN }}
        project_base_dir: ${{ github.workspace }}

  codeql:
    runs-on: ubuntu-latest
    needs: unit_tests
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  ### PROJECT SPECIFIC CONFIGURATION HERE
  e2e_tests_trusted_branch:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: (github.event.pull_request.head.repo.full_name == github.repository || github.event.pull_request == null)
    needs: [unit_tests]
    strategy:
      matrix:
        e2e_case: ["standard", "grouping"]
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Run E2E tests
        uses: ./.github/actions/e2e_test
        with:
          e2e_config: ${{ matrix.e2e_case }}
          python_version: ${{ matrix.python-version }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          gcp_sa_email: ${{ secrets.GCP_SA_EMAIL }}
          gcp_wif_provider_id: ${{ secrets.GCP_WIF_PROVIDER_ID }}

  e2e_tests_forked_branch:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: (github.event.pull_request.head.repo.full_name != github.repository && github.event.repository_dispatch.client_payload.pull_request.head.repo.full_name != github.repository)
    needs: [unit_tests]
    strategy:
      matrix:
        e2e_case: ["standard", "grouping"]
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.sha }}

      - name: Run E2E tests
        uses: ./.github/actions/e2e_test
        with:
          e2e_config: ${{ matrix.e2e_case }}
          python_version: ${{ matrix.python-version }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
          gcp_sa_email: ${{ secrets.GCP_SA_EMAIL }}
          gcp_wif_provider_id: ${{ secrets.GCP_WIF_PROVIDER_ID }}

  publish:
    permissions:
      pull-requests: write
      contents: write
    # only run on push to master
    if: github.event.pull_request == null && github.ref == 'refs/heads/master'
    needs: [e2e_tests_trusted_branch, codeql]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessary to enable merging, all the history is needed

      - name: Publish package
        uses: ./.github/actions/publish
        with:
          python_version: ${{ matrix.python-version }}
          python_package: kedro_vertexai
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_password: ${{ secrets.PYPI_PASSWORD }}
